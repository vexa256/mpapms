module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "fb15");
/******/ })
/************************************************************************/
/******/ ({

/***/ "8875":
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// addapted from the document.currentScript polyfill by Adam Miller
// MIT license
// source: https://github.com/amiller-gh/currentScript-polyfill

// added support for Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1620505

(function (root, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
}(typeof self !== 'undefined' ? self : this, function () {
  function getCurrentScript () {
    var descriptor = Object.getOwnPropertyDescriptor(document, 'currentScript')
    // for chrome
    if (!descriptor && 'currentScript' in document && document.currentScript) {
      return document.currentScript
    }

    // for other browsers with native support for currentScript
    if (descriptor && descriptor.get !== getCurrentScript && document.currentScript) {
      return document.currentScript
    }
  
    // IE 8-10 support script readyState
    // IE 11+ & Firefox support stack trace
    try {
      throw new Error();
    }
    catch (err) {
      // Find the second match for the "at" string to get file src url from stack.
      var ieStackRegExp = /.*at [^(]*\((.*):(.+):(.+)\)$/ig,
        ffStackRegExp = /@([^@]*):(\d+):(\d+)\s*$/ig,
        stackDetails = ieStackRegExp.exec(err.stack) || ffStackRegExp.exec(err.stack),
        scriptLocation = (stackDetails && stackDetails[1]) || false,
        line = (stackDetails && stackDetails[2]) || false,
        currentLocation = document.location.href.replace(document.location.hash, ''),
        pageSource,
        inlineScriptSourceRegExp,
        inlineScriptSource,
        scripts = document.getElementsByTagName('script'); // Live NodeList collection
  
      if (scriptLocation === currentLocation) {
        pageSource = document.documentElement.outerHTML;
        inlineScriptSourceRegExp = new RegExp('(?:[^\\n]+?\\n){0,' + (line - 2) + '}[^<]*<script>([\\d\\D]*?)<\\/script>[\\d\\D]*', 'i');
        inlineScriptSource = pageSource.replace(inlineScriptSourceRegExp, '$1').trim();
      }
  
      for (var i = 0; i < scripts.length; i++) {
        // If ready state is interactive, return the script tag
        if (scripts[i].readyState === 'interactive') {
          return scripts[i];
        }
  
        // If src matches, return the script tag
        if (scripts[i].src === scriptLocation) {
          return scripts[i];
        }
  
        // If inline source matches, return the script tag
        if (
          scriptLocation === currentLocation &&
          scripts[i].innerHTML &&
          scripts[i].innerHTML.trim() === inlineScriptSource
        ) {
          return scripts[i];
        }
      }
  
      // If no match, return null
      return null;
    }
  };

  return getCurrentScript
}));


/***/ }),

/***/ "fb15":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js
// This file is imported into lib/wc client bundles.

if (typeof window !== 'undefined') {
  var currentScript = window.document.currentScript
  if (true) {
    var getCurrentScript = __webpack_require__("8875")
    currentScript = getCurrentScript()

    // for backward compatibility, because previously we directly included the polyfill
    if (!('currentScript' in document)) {
      Object.defineProperty(document, 'currentScript', { get: getCurrentScript })
    }
  }

  var src = currentScript && currentScript.src.match(/(.+\/)[^/]+\.js(\?.*)?$/)
  if (src) {
    __webpack_require__.p = src[1] // eslint-disable-line
  }
}

// Indicate to webpack that this file can be concatenated
/* harmony default export */ var setPublicPath = (null);

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./VueCrudX.vue?vue&type=template&id=72505d4c&scoped=true&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.ready)?_c('div',[_vm._t("progress",[_c('v-overlay',{attrs:{"value":_vm.loading}},[_c('v-progress-circular',{attrs:{"indeterminate":"","size":"64"}})],1)],{"vcx":_vm._self}),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(!_vm.showForm),expression:"!showForm"}],tag:"component"},[_vm._t("table-toolbar",[_c('v-toolbar',_vm._b({},'v-toolbar',_vm.vtoolbar,false),[_c('v-toolbar-title',[(_vm.parentId)?_c('v-btn',_vm._b({attrs:{"disabled":_vm.loading},on:{"click":function($event){$event.stopPropagation();return _vm.goBack($event)}}},'v-btn',_vm.vbtn.back.props,false),[_c('v-icon',[_vm._v(_vm._s(_vm.vbtn.back.icon))]),_c('span',[_vm._v(_vm._s(_vm.vbtn.back.label))])],1):_vm._e(),_vm._v(" "+_vm._s(_vm.showTitle))],1),_vm._v(" "),_c('v-spacer'),_vm._v(" "),(_vm.filters)?_c('v-btn',_vm._b({on:{"click":function($event){_vm.showFilter=!_vm.showFilter}}},'v-btn',_vm.vbtn.filter.props,false),[_c('v-icon',[_vm._v(_vm._s(_vm.showFilter ? _vm.vbtn.filter.icon2 : _vm.vbtn.filter.icon))]),_c('span',[_vm._v(_vm._s(_vm.vbtn.filter.label))])],1):_vm._e(),_vm._v(" "),_c('v-btn',_vm._b({attrs:{"disabled":!_vm.validFilter || _vm.loading},on:{"click":_vm.onFilter}},'v-btn',_vm.vbtn.reload.props,false),[_c('v-icon',[_vm._v(_vm._s(_vm.vbtn.reload.icon))]),_c('span',[_vm._v(_vm._s(_vm.vbtn.reload.label))])],1),_vm._v(" "),(_vm.crud.create)?_c('v-btn',_vm._b({attrs:{"disabled":_vm.loading},on:{"click":function($event){$event.stopPropagation();_vm.inline.create?_vm._inlineCreate():_vm.formOpen(null)}}},'v-btn',_vm.vbtn.create.props,false),[_c('v-icon',[_vm._v(_vm._s(_vm.vbtn.create.icon))]),_c('span',[_vm._v(_vm._s(_vm.vbtn.create.label))])],1):_vm._e(),_vm._v(" "),(_vm.crud.export)?_c('v-btn',_vm._b({attrs:{"disabled":_vm.loading},on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.onExport($event)}}},'v-btn',_vm.vbtn.export.props,false),[_c('v-icon',[_vm._v(_vm._s(_vm.vbtn.export.icon))]),_c('span',[_vm._v(_vm._s(_vm.vbtn.export.label))])],1):_vm._e()],1)],{"vcx":_vm._self}),_vm._v(" "),(_vm.showFilter)?_c('div',[_vm._t("filter",[(_vm.filters)?_c('v-form',_vm._b({ref:"searchForm",model:{value:(_vm.validFilter),callback:function ($$v) {_vm.validFilter=$$v},expression:"validFilter"}},'v-form',_vm.vformFilter,false),[_c('v-container',{attrs:{"fluid":""}},[_c('v-layout',{attrs:{"row":"","wrap":""}},[_vm._l((_vm.filters),function(filter,i){return [_c('v-flex',_vm._b({key:i},'v-flex',filter['field-wrapper'],false),[_c(filter.type,_vm._b({tag:"component",model:{value:(filter.value),callback:function ($$v) {_vm.$set(filter, "value", $$v)},expression:"filter.value"}},'component',filter['field-input'],false))],1)]})],2)],1)],1):_vm._e()],{"filters":_vm.filters,"parentId":_vm.parentId,"vcx":_vm._self})],2):_vm._e(),_vm._v(" "),_vm._t("table",[_c('v-data-table',_vm._b({attrs:{"headers":_vm.vtable.headers,"items":_vm.records,"server-items-length":_vm.totalRecords,"options":_vm.pagination,"hide-default-footer":_vm.infinite,"item-key":_vm.idName},on:{"update:options":function($event){_vm.pagination=$event}},scopedSlots:_vm._u([{key:"headerCell",fn:function(props){return [_c('span',{domProps:{"innerHTML":_vm._s(props.header.text)}})]}},{key:"item",fn:function(ref){
var item = ref.item;
return [_c('tr',{key:item[_vm.idName],ref:("row-" + (item[_vm.idName])),on:{"click":function($event){$event.stopPropagation();return _vm.onRowClick(item, $event, _vm._self)}}},[_vm._t("td",_vm._l((_vm.vtable.headers),function(header,index){return _c('td',{key:header.value + index,class:header.class},[(header.action)?_c('span',[(_vm._isRowEditing(item))?[(_vm.crud.update && _vm.inline.update)?_c('v-icon',_vm._b({attrs:{"disabled":_vm.loading},on:{"click":function($event){$event.stopPropagation();return _vm._inlineSave(item)}}},'v-icon',_vm.vicon.save.props,false),[_vm._v(_vm._s(_vm.vicon.save.name))]):_vm._e(),_vm._v(" "),(_vm.crud.update && _vm.inline.update)?_c('v-icon',_vm._b({attrs:{"disabled":_vm.loading},on:{"click":function($event){$event.stopPropagation();_vm.editingRow=null}}},'v-icon',_vm.vicon.cancel.props,false),[_vm._v(_vm._s(_vm.vicon.cancel.name))]):_vm._e()]:[(_vm.crud.update && (_vm.inline.update || (!_vm.inline.update && _vm.form)))?_c('v-icon',_vm._b({attrs:{"disabled":_vm.loading},on:{"click":function($event){$event.stopPropagation();_vm.inline.update?_vm.editingRow = Object.assign({}, item):_vm.formOpen(item[_vm.idName])}}},'v-icon',_vm.vicon.edit.props,false),[_vm._v(_vm._s(_vm.vicon.edit.name))]):_vm._e(),_vm._v(" "),(_vm.crud.delete && _vm.inline.delete)?_c('v-icon',_vm._b({attrs:{"disabled":_vm.loading},on:{"click":function($event){$event.stopPropagation();return _vm.deleteRecord(item[_vm.idName])}}},'v-icon',_vm.vicon.delete.props,false),[_vm._v(_vm._s(_vm.vicon.delete.name))]):_vm._e()]],2):[(_vm.inline.update && _vm._isRowEditing(item) && header.edit)?_c(header.edit.type,_vm._b({key:item[_vm.idName]+'-'+item[header.value],tag:"component",model:{value:(_vm.editingRow[header.value]),callback:function ($$v) {_vm.$set(_vm.editingRow, header.value, $$v)},expression:"editingRow[header.value]"}},'component',header.edit.props,false)):_c('span',{domProps:{"innerHTML":_vm._s(header.render?header.render(item[header.value] || item):item[header.value])}})]],2)}),{"headers":_vm.vtable.headers,"item":item,"vcx":_vm._self})],2)]}},(_vm.infinite)?{key:"footer",fn:function(){return [_c('div',_vm._b({},'div',_vm.vbtn.more.wrapper,false),[(_vm.cursor)?_c('v-btn',_vm._b({attrs:{"disabled":_vm.loading},on:{"click":function($event){return _vm.getRecords({ mode: 'load-more' })}}},'v-btn',_vm.vbtn.more.props,false),[_vm._v(_vm._s(_vm.$t?_vm.$t('vueCrudX.more'):_vm.vbtn.more.label))]):_vm._e()],1)]},proxy:true}:null,{key:"no-data",fn:function(){return [_c('v-alert',{attrs:{"value":!_vm.loading&&!_vm.records.length,"color":"error","icon":"warning"}},[_vm._v(_vm._s(_vm.$t?_vm.$t('vueCrudX.noData'):'NO DATA'))])]},proxy:true}],null,true)},'v-data-table',_vm.vtable,false))],{"records":_vm.records,"totalRecords":_vm.totalRecords,"pagination":_vm.pagination,"vcx":_vm._self})],2),_vm._v(" "),(_vm.showForm)?_c('div',{tag:"component",attrs:{"row":"","justify-center":""}},[_vm._t("form-toolbar",[_c('v-toolbar',_vm._b({},'v-toolbar',_vm.vtoolbar,false),[_c('v-toolbar-title',[_c('v-btn',_vm._b({attrs:{"disabled":_vm.loading},nativeOn:{"click":function($event){return _vm.formClose($event)}}},'v-btn',_vm.vbtn.close.props,false),[_c('v-icon',[_vm._v(_vm._s(_vm.vbtn.close.icon))]),_c('span',[_vm._v(_vm._s(_vm.vbtn.close.label))])],1),_vm._v(" "+_vm._s(_vm.showTitle))],1),_vm._v(" "),_c('v-spacer'),_vm._v(" "),(_vm.crud.delete && _vm.selectedId)?_c('v-btn',_vm._b({attrs:{"disabled":_vm.loading},nativeOn:{"click":function($event){return _vm.formDelete($event)}}},'v-btn',_vm.vbtn.delete.props,false),[_c('v-icon',[_vm._v(_vm._s(_vm.vbtn.delete.icon))]),_c('span',[_vm._v(_vm._s(_vm.vbtn.delete.label))])],1):_vm._e(),_vm._v(" "),(_vm.crud.update && _vm.selectedId||_vm.crud.create && !_vm.selectedId)?_c('v-btn',_vm._b({attrs:{"disabled":!_vm.validForm||_vm.loading},nativeOn:{"click":function($event){return _vm.formSave($event)}}},'v-btn',_vm.vbtn.update.props,false),[_c('v-icon',[_vm._v(_vm._s(_vm.vbtn.update.icon))]),_c('span',[_vm._v(_vm._s(_vm.vbtn.update.label))])],1):_vm._e()],1)],{"vcx":_vm._self}),_vm._v(" "),_vm._t("form",[_c('v-form',_vm._b({attrs:{"parentId":_vm.parentId,"vcx":_vm._self},model:{value:(_vm.validForm),callback:function ($$v) {_vm.validForm=$$v},expression:"validForm"}},'v-form',_vm.vformCrud,false),[_c('v-container',{attrs:{"fluid":""}},[_c('v-layout',{attrs:{"row":"","wrap":""}},[_vm._l((_vm.form),function(item,i){return [(!_vm._isHidden(item.hidden))?_c('v-flex',_vm._b({key:i},'v-flex',item['field-wrapper'],false),[_c(item.type,_vm._b({tag:"component",attrs:{"disabled":_vm._isReadOnly(item.readonly)},on:{"input":function($event){return _vm.onInput($event, i)}},model:{value:(item.value),callback:function ($$v) {_vm.$set(item, "value", $$v)},expression:"item.value"}},'component',item['field-input'],false))],1):_vm._e()]})],2)],1)],1)],{"form":_vm.form,"parentId":_vm.parentId,"vcx":_vm._self})],2):_vm._e()],2):_vm._e()}
var staticRenderFns = []


// CONCATENATED MODULE: ./VueCrudX.vue?vue&type=template&id=72505d4c&scoped=true&

// CONCATENATED MODULE: ./node_modules/vue-loader/lib??vue-loader-options!./VueCrudX.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

// Notes:
// TBD / TODO - todos
// VARIATION - Note this code block when implementing on other UI Framework
// IMPORTANT - important point to take not of
// TOREMOVE - to be removed
// TODEPRECATE - to deprecate & remove
// UNUSED - not used

/* harmony default export */ var lib_vue_loader_options_VueCrudXvue_type_script_lang_js_ = ({
  props: {
    parentId: { type: String, default: null },
    refreshMs: { type: Number, default: 0 }
  },
  data () {
    return {
      // Private Properties Do Not Override - Start
      ready: false, // TODELETE May Not Be Needed Anymore...
      loading: false,
      records: [],
      totalRecords: 0,
      showFilter: false, // show/hide
      showForm: false,
      validFilter: true, // form validation
      validForm: true,
      editingRow: null, // for row editing... null or row object
      cursor: '', // infinite scroll cursor
      selectedId: null, //  selected record Id
      // Private Properties Do Not Override - End

      // VARIATION - Start Vuetify 2
      vbtn: { // v-btn Component
        back: { icon: 'reply', label: '', props: { dark: false, light: true, icon: true, fab: false } },
        filter: { icon: 'search', label: '', icon2: 'keyboard_arrow_up', props: { dark: false, light: true, icon: true, fab: false } },
        reload: { icon: 'replay', label: '', props: { dark: false, light: true, icon: true, fab: false } },
        create: { icon: 'add', label: '', props: { dark: false, light: true, icon: true, fab: false } },
        export: { icon: 'print', label: '', props: { dark: false, light: true, icon: true, fab: false } },
        close: { icon: 'close', label: '', props: { dark: false, light: true, icon: true, fab: false } },
        delete: { icon: 'delete', label: '', props: { dark: false, light: true, icon: true, fab: false } },
        update: { icon: 'save', label: '', props: { dark: false, light: true, icon: true, fab: false } },
        more: {
          icon: '',
          label: 'Load More',
          props: null,
          wrapper: {
            style: {
              display: 'flex',
              'justify-content': 'center'
            }
          }
        }
      },
      vicon: { // v-icon Component
        edit: { name: 'edit', props: { small: true, class: 'mr-1' } },
        save: { name: 'save', props: { small: true, class: 'mr-1' } },
        cancel: { name: 'cancel', props: { small: true, class: 'mr-1' } },
        delete: { name: 'delete', props: { small: true, class: 'mr-1' } }
      },
      vtoolbar: { height: 48, dark: false, light: true, color: 'grey' }, // v-toolbar Component
      vformFilter: { class: 'grey lighten-3 pa-2', style: { overflow: 'auto' }, 'lazy-validation': true }, // v-form Component for filter
      vformCrud: { class: 'grey lighten-3 pa-2', style: { overflow: 'auto' }, 'lazy-validation': true }, // v-form Component for CRUD
      vtable: { // props
        headers: [],
        'footer-props': {
          'items-per-page-options': [2, 5, 10, 25]
        },
        dense: true,
        'multi-sort': false,
        'fixed-header': true,
        dark: false,
        light: true,
        // 'rows-per-page-items': [],
        'hide-default-header': false,
        height: 'calc(100vh - 200px)'
      },
      // VARIATION - End Vuetify2

      // depends on UI Framework
      pageSize: 2,
      pageSizeOptions: [2, 5, 10, 25],
      pagination: {
        // VARIATION - Start Vuetify2
        page: 1,
        itemsPerPage: 2,
        sortBy: [],
        sortDesc: []
        // totalItems: 0 // completely useless at the moment
        // VARIATION - End Vuetify2
      },
      sorters: { // Not Used In Vuetify
      },
      pageDefaults: { // page options
        // VARIATION - Start Vuetify2
        start: 1,
        itemsPerPage: 2,
        sortBy: [],
        sortDesc: []
        // VARIATION - End Vuetify2
      },
      sortDefaults: { // Not Used In Vuetify
      },

      idName: 'id',
      infinite: false, // either paged or infinite scroll
      inline: { create: false, update: false, delete: false }, // inline functionality
      title: '',

      filters: null,
      form: null,
      crud: {
        create: null, // operations
        update: null,
        'delete': null,
        find: () => ({ status: 500, error: '' }),
        findOne: () => ({ status: 500, error: '' }),
        export: null
      }

      // Overrideable Methods
      // onRowClick; created, updated, deleted; confirmCreate, confirmUpdate, confirmDelete; notifyCreate, notifyUpdate, notifyDelete, notifyExport, notifyFind, notifyFindOne
    }
  },
  async created () {
    this.ready = true

    this.idName = this.$attrs.idName || 'id'
    this.infinite = !!this.$attrs.infinite // default false
    this.title = this.$attrs.title || 'Title'

    // VARIATION Start Vuetify2
    this.vicon = Object.assign(this.vicon, this.$attrs.vicon || {})
    this.vbtn = Object.assign(this.vbtn, this.$attrs.vbtn || {})
    this.vformFilter = Object.assign(this.vformFilter, this.$attrs.vformFilter || {})
    this.vformCrud = Object.assign(this.vformCrud, this.$attrs.vformCrud || {})
    this.vtoolbar = Object.assign(this.vtoolbar, this.$attrs.vtoolbar || {})
    this.vtable = Object.assign(this.vtable, this.$attrs.vtable || {})
    // console.log("this.$attrs.pageSizeOptions", this.$attrs.pageSizeOptions)
    if (this.$attrs.pageSizeOptions && this.$attrs.pageSizeOptions.length) {
      this.vtable['footer-props']['items-per-page-options'] = this.$attrs.pageSizeOptions
      // console.log("this.vtable['footer-props']['items-per-page-options']", this.vtable['footer-props']['items-per-page-options'])
    }
    this.sorters = Object.assign(this.sorters, this.$attrs.sorters || {})
    this.sortDefaults = Object.assign(this.sortDefaults, this.$attrs.sortDefaults || {})
    this.pageDefaults = Object.assign(this.pageDefaults, this.$attrs.pageDefaults || {})
    this.pageDefaults.itemsPerPage = Number(this.$attrs.pageSize) || this.pageSize 
    this.pagination = {
      ...this.pagination,
      page: this.pageDefaults.start,
      itemsPerPage: this.pageDefaults.itemsPerPage,
      sortBy: this.pageDefaults.sortBy,
      sortDesc: this.pageDefaults.sortDesc
    }
    if (this.infinite) this.cursor = this.pageDefaults.start
    // VARIATION End Vuetify2

    this.crud = Object.assign(this.crud, this.$attrs.crud || {})
    this.filters = this.$attrs.filters || null
    this.inline = Object.assign(this.inline, this.$attrs.inline || {})
    this.form = this.$attrs.form || null

    // non-ui reactive data - START
    this.onRowClick = this.$attrs.onRowClick || ((item, event, vcx) => { // open form on row click? default true
      if (!this.inline.update) this.formOpen(item[this.idName]) // no action column && row click opens form
    })
    this.created = this.$attrs.created || (async ({ data }) => { // do not handle realtime updates of create
      this.filters = this.$attrs.filters || null
      this.pagination.page = this.pageDefaults.start
      this.pagination.sortBy = this.pageDefaults.sortBy
      this.pagination.sortDesc = this.pageDefaults.sortDesc
      await this.getRecords({ mode: 'created' })
    })
    this.deleted = this.$attrs.deleted || (async (id) => { // do not handle realtime updates of delete
      this.filters = this.$attrs.filters || null
      this.pagination.page = this.pageDefaults.start
      this.pagination.sortBy = this.pageDefaults.sortBy
      this.pagination.sortDesc = this.pageDefaults.sortDesc
      await this.getRecords({ mode: 'deleted' })
    })
    this.updated = this.$attrs.updated || (({ data }) => { // also handles real-time updates
      const idx = this.records.findIndex(rec => rec[this.idName] === data[this.idName])
      if (idx !== -1) {
        for (let key in this.records[idx]) {
          if (key !== this.idName && data[key]) this.records[idx][key] = data[key]
        }
      }
    })
    // notifications
    this.notifyCreate = this.$attrs.notifyCreate || ( ({ status, error }) => (status === 200 || status === 201) ? alert('Create OK') : alert('Create Error ' + error.toString()) )
    this.notifyUpdate = this.$attrs.notifyUpdate || ( ({ status, error }) => (status === 200 || status === 201) ? alert('Update OK') : alert('Update Error ' + error.toString()) )
    this.notifyDelete = this.$attrs.notifyDelete || ( ({ status, error }) => (status === 200 || status === 201) ? alert('Delete OK') : alert('Delete Error ' + error.toString()) )
    this.notifyExport = this.$attrs.notifyExport || (({ status, error }) => { if (!(status === 200 || status === 201)) alert('Export Error ' + error.toString()) })
    this.notifyFind = this.$attrs.notifyFind || (({ status, error }) => { if (!(status === 200 || status === 201)) alert('Find Error ' + error.toString()) })
    this.notifyFindOne = this.$attrs.notifyFindOne || (({ status, error }) => { if (!(status === 200 || status === 201)) alert('FindOne Error ' + error.toString()) })
    // confirmations - do this part after getting inline status
    this.confirmCreate = this.$attrs.confirmCreate || (() => this.inline.create ? confirm(this.$t('vueCrudX.confirm')) : true) // default only confirm if inline create
    this.confirmUpdate = this.$attrs.confirmUpdate || (() => true) // default always no need confirmation
    this.confirmDelete = this.$attrs.confirmDelete || (() => confirm(this.$t('vueCrudX.confirm'))) // default always need confirmation
    // non-ui reactive data - END
  },
  async mounted () {
    // not needed in data() because it does not exist in template, an optimization which should be done for others as well
    if (typeof this.$t !== 'function') this.$t = text => text // if no internationalization
    if (this.refreshMs > 0 && this.showForm  === false) { // should table refresh?
      let timer = setInterval(() => { if (!this.showForm && !this.showFilter) this.onFilter() }, this.refreshMs)
      this.$once('hook:beforeDestroy', () => { if (timer) clearInterval(timer) })
    }
  },
  computed: {
    showTitle () { return this.title || '' }
  },
  watch: {
    pagination: async function (newValue, oldValue) {
      console.log('watch - pagination')
      await this.getRecords({ mode: 'pagesort' })
    }
  },
  methods: {
    goBack () { this.$router.back() }, // return from child
    // mode - (user action): created, deleted, filter-paged, filter-infinite
    //      - (page, sort events & initial load): pagesort, load-more (for subsequent infinite scroll loads)
    async getRecords ({ mode }) {
      // VARIATION Start - Vuetify2
      if (this.infinite) {
        if (mode === 'load-more') this.pagination.page = this.cursor // load more, this does not fire pagination event
        else if (mode === 'filter-infinite' || mode === 'created' || mode === 'deleted') this.pagination.page = this.pageDefaults.start
        else if (mode === 'pagesort' && this.pagination.page === this.pageDefaults.start) {
          // console.log('ok')
        } else return
      }
      let filters = {}
      for (let key in this.filters) {
        let value = this.filters[key].value
        if (value) filters[key] = value
      }
      let sorters = ''
      const { sortBy = [], sortDesc = [] } = this.pagination
      for (let index in sortBy) {
        if (sortDesc[index] !== undefined) {
          if (sorters) sorters += ';'
          sorters += `${sortBy[index]},${sortDesc[index] ? 'desc' : 'asc'}`
        }
      }
      // VARIATION End - Vuetify2
      const payload = {
        parentId: this.parentId,
        pagination: this.pagination,
        filters,
        sorters
      }
      this.loading = true
      // console.log('getRecords', mode, this.pagination, filters, sorters)
      const { status = 500, data = null, error = null } = await this.crud.find(payload) // pagination returns for infinite scroll
      if (status === 200) {
        let { records, totalRecords = 0, cursor = '' } = data
        this.cursor = cursor

        if (this.infinite && this.pagination.page !== this.pageDefaults.start) {
          this.totalRecords += records.length
          this.records = this.records.concat(records)
        } else {
          this.totalRecords = totalRecords
          this.records = records
        }
      }
      this.notifyFind({ status, error })
      this.loading = false
    },
    async getRecord (id) {
      this.loading = true
      const { status = 500, data = null, error = null } = await this.crud.findOne(id)
      if (status === 200 && data) {
        for (let key in this.form) {
          this.form[key].value = this.form[key].render ? this.form[key].render(data[key]) : data[key]
        }
      }
      this.notifyFindOne({ status, error })
      this.loading = false
    },
    async updateRecord ({ record }) {
      if (!this.confirmUpdate()) return
      this.loading = true
      // eslint-disable-next-line
      const { status = 500, data = null, error = null } = await this.crud.update({ record })
      this.loading = false
      if (status === 200) await this.updated({ data })
      this.notifyUpdate({ status, error })
    },
    async createRecord ({ record, parentId }) {
      if (!this.confirmCreate()) return
      this.loading = true
      // eslint-disable-next-line
      const { status = 500, data = null, error = null } = await this.crud.create({ record, parentId })
      this.loading = false
      if (status === 201) await this.created({ data })
      this.notifyCreate({ status, error })
    },
    async deleteRecord (id) {
      if (!this.confirmDelete()) return
      this.loading = true
      // eslint-disable-next-line
      const { status = 500, data = null, error = null } = await this.crud.delete(id)
      if (status === 200) await this.deleted(id)
      this.loading = false
      this.notifyDelete({ status, error })
    },
    async exportRecords () {
      this.loading = true
      // VARIATION Start - Vuetify2
      let filters = {}
      for (let key in this.filters) {
        let value = this.filters[key].value
        if (value) filters[key] = value
      }
      // VARIATION End - Vuetify2
      const payload = {
        parentId: this.parentId,
        pagination: this.pagination, // not used
        filters,
        sorters: ''
      }
      this.loading = true
      const { status = 500, error = null } = await this.crud.export(payload)
      this.notifyExport({ status, error })
      this.loading = false
    },
    formClose () {
      this.showForm = false
      this.$emit('form-close')
    },
    async formOpen (id) {
      this.selectedId = id
      if (id) {
        await this.getRecord(id) // update
      } else { // create - set initial data
        this.editingRow = null
        for (let key in this.form) this.form[key].value = this.$attrs.form[key].default || ''
      }
      this.showForm = true
      this.$emit('form-open', this.form)
    },
    async formSave (e) {
      let record = {}
      let id = this.selectedId
      for (let key in this.form) {
        if (key !== this.idName) record[key] = this.form[key].value // ignore id, get from selectedId
      }
      record[this.idName] = id
      if (id) await this.updateRecord({ record })
      else await this.createRecord({ record, parentId: this.parentId })
      this.formClose()
    },
    async formDelete (e) {
      const id = this.selectedId
      if (id) await this.deleteRecord(id)
      this.formClose()
    },

    async onFilter () {
      if (this.editingRow) this.editingRow = null
      this.totalRecords = 0
      this.records = []
      if (this.infinite) {
        // VARIATION Start Vuetify2
        // NO NEED... IT IS ALREADY DONE this.pagination.page = this.pageDefaults.start // this does not fire off pagination event
        await this.getRecords({ mode: 'filter-infinite' }) // so need to call this after
        // VARIATION End Vuetify2
      } else {
        // VARIATION Start Vuetify2
        if (this.pagination.page !== this.pageDefaults.start) {
          this.pagination = { // this fire off pagination event
            ...this.pagination,
            page: this.pageDefaults.start
          }
        } else {
          await this.getRecords({ mode: 'filter-paged' })
        }
        // VARIATION End Vuetify2
      }
    },
    async onExport () { await this.exportRecords() },
    // clearFilter () { this.$refs.searchForm.reset() }, // can do test code here too
    onInput (ev, key) { this.$emit(`${key}Input`, ev) },

    // INLINE EDIT START
    _isRowEditing (item) { return (!this.editingRow) ? false : item[this.idName] === this.editingRow[this.idName] },
    async _inlineSave (item) {
      item = { ...this.editingRow }
      this.editingRow = null
      await this.updateRecord({ record: item })
    },
    async _inlineCreate () {
      this.editingRow = null
      await this.createRecord({ record: {}, parentId: this.parentId })
    },
    // INLINE EDIT END
    _isHidden (hidden) { return (hidden === 'add' && !this.selectedId) || (hidden === 'edit' && !!this.selectedId) || hidden === 'all' },
    _isReadOnly (readonly) { return (readonly === 'add' && !this.selectedId) || (readonly === 'edit' && !!this.selectedId) || readonly === 'all' },
    _isObject (obj) { return obj !== null && typeof obj === 'object' },

    async testFunction (_in) { } // for testing anything
  }
});

// CONCATENATED MODULE: ./VueCrudX.vue?vue&type=script&lang=js&
 /* harmony default export */ var VueCrudXvue_type_script_lang_js_ = (lib_vue_loader_options_VueCrudXvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode /* vue-cli only */
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () {
        injectStyles.call(
          this,
          (options.functional ? this.parent : this).$root.$options.shadowRoot
        )
      }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functional component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}

// CONCATENATED MODULE: ./VueCrudX.vue





/* normalize component */

var component = normalizeComponent(
  VueCrudXvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  "72505d4c",
  null
  
)

/* harmony default export */ var VueCrudX = (component.exports);
// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/entry-lib.js


/* harmony default export */ var entry_lib = __webpack_exports__["default"] = (VueCrudX);



/***/ })

/******/ })["default"];